name: Terraform

on:
  workflow_dispatch:
    inputs:
      do_apply:
        description: 'apply? or not(destroy)'
        required: true
        type: boolean

env:
  TF_VAR_project_id          : ${{ vars.project_id }}
  TF_VAR_region              : ${{ vars.region }}
  TF_VAR_zone                : ${{ vars.zone }}
  TF_VAR_service_account_id  : ${{ vars.service_account_id }}
  TF_VAR_service_account_name: ${{ vars.service_account_name }}
  TF_VAR_instance_name       : ${{ vars.instance_name }}
  TF_VAR_machine_type        : ${{ vars.machine_type }}
  TF_VAR_image               : ${{ vars.image }}
  TF_VAR_tags                : ${{ vars.tags }}
  TF_VAR_ssh_port            : ${{ vars.ssh_port }}
  TF_BUCKET_NAME             : ${{ vars.bucket_name }}
  TF_BUCKET_PREFIX           : ${{ vars.bucket_prefix }}

jobs:
  create_gce:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2

      - run: terraform fmt -check -recursive
      - run: terraform init -backend-config="bucket=$TF_BUCKET_NAME" -backend-config="prefix=$TF_BUCKET_PREFIX"
      - run: terraform validate
      - run: terraform plan -no-color -lock-timeout=60m

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && inputs.do_apply
        run: terraform apply -auto-approve -input=false

      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && !inputs.do_apply
        run: terraform destroy -auto-approve -input=false
